server:
  port: 8080
  address: 0.0.0.0  # 모든 인터페이스에서 접근 허용
  forward-headers-strategy: framework  # ALB 프록시 헤더 인식
  use-forward-headers: true  # 프록시 헤더 사용 강제

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 221594470812-2msddcnuckjr7iklc7j749epek0pbbjr.apps.googleusercontent.com
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: https://tftshare.com/api/oauth2/callback
            scope: openid,email,profile,https://www.googleapis.com/auth/youtube.upload
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post

  datasource:
    url: jdbc:mysql://tft-share-db.cvoms202yzka.ap-northeast-2.rds.amazonaws.com:3306/tft_share_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=utf8&useUnicode=true

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    # 운영 환경에서 성능 최적화
    properties:
      hibernate:
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

# 운영 환경에서는 AWS 기능 활성화
aws:
  credentials:
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
  s3:
    bucket-name: tft-share-bucket
    region: ap-northeast-2

# 운영 환경 프론트엔드 URL
frontend:
  url: https://tftshare.com
  login-success-path: /login-success

# 운영 환경 로깅 설정
logging:
  level:
    com.neojen.tft_share: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/tft-share.log
    max-size: 100MB
    max-history: 30

