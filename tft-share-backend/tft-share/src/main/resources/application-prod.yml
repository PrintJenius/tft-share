server:
  port: 8080
  address: 0.0.0.0

spring:
  application:
    name: tft-share

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://tftshare.com:8080/api/oauth2/callback
            scope:
              - openid
              - email
              - profile
              - youtube.upload
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://openidconnect.googleapis.com/v1/userinfo

  datasource:
    url: jdbc:mysql://tft-share-db.cvoms202yzka.ap-northeast-2.rds.amazonaws.com:3306/tft_share_db?useSSL=false&requireSSL=false&serverTimezone=Asia/Seoul
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  servlet:
    multipart:
      max-file-size: 2000MB
      max-request-size: 2000MB

jwt:
  secret: ${JWT_SECRET}

# 운영 환경에서는 AWS 기능 활성화
aws:
  credentials:
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
  s3:
    bucket-name: tft-share-bucket
    region: ap-northeast-2

riot:
  api:
    key: ${RIOT_API_KEY}
    kr-url: https://kr.api.riotgames.com
    asia-url: https://asia.api.riotgames.com

# 운영 환경 프론트엔드 URL
frontend:
  url: https://tftshare.com
  login-success-path: /oauth2/callback

